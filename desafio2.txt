
-- crear la base de datos
create database desafio2_yesenia_urdaneta_211;
-- posicionarse dentro de la ddbb 
\c desafio2_yesenia_urdaneta_211
-- crear la tabla
CREATE TABLE IF NOT EXISTS INSCRITOS(cantidad INT, fecha DATE, fuente VARCHAR); 
-- la restricción IF NOT EXISTS, crea la tabla cuando no existe una tabla con el mismo nombre en la base.
-- insertar los registros
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 44, '01/01/2021', 'Blog' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 56, '01/01/2021', 'Página' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 39, '01/02/2021', 'Blog' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 81, '01/02/2021', 'Página' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 12, '01/03/2021', 'Blog' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 91, '01/03/2021', 'Página' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 48, '01/04/2021', 'Blog' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 45, '01/04/2021', 'Página' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 55, '01/05/2021', 'Blog' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 33, '01/05/2021', 'Página' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 18, '01/06/2021', 'Blog' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 12, '01/06/2021', 'Página' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 34, '01/07/2021', 'Blog' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 24, '01/07/2021', 'Página' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 83, '01/08/2021', 'Blog' );
INSERT INTO INSCRITOS(cantidad, fecha, fuente) VALUES ( 99, '01/08/2021', 'Página' );
-- vemos la tabla
select * from INSCRITOS order;
-- inicio de querys solicitadas por el ejercicio
-- 1. ¿Cuántos registros hay?
select count(*) from INSCRITOS;


--2. ¿Cuántos inscritos hay en total?
select sum(cantidad) cantidad_inscritos from INSCRITOS;

--3. ¿Cuál o cuáles son los registros de mayor antigüedad?
select min(fecha) mas_antiguos from INSCRITOS; -- indica la fecha mas antigua 
select fecha as  mas_antiguos, cantidad, fuente from INSCRITOS where fecha in (select min(fecha) from inscritos); 
-- seleeciona todos los registros de la tabla cambiando en la consulta el nombre del campo fecha a mas_antiguos para mejor comprencion
-- para la tabla de incritos donde en la fecha esta el valor obtenido de la subconsulta 
-- q esta selecciona la fecha minima de la tabla inscritos)   

select min(fecha) mas_antiguos, fuente from INSCRITOS group by fuente; --por fuente

-- 4. ¿Cuántos inscritos hay por día? (entendiendo un día como una fecha distinta de ahora en adelante)
select sum(cantidad) as total_inscritos, fecha from INSCRITOS group by fecha order by fecha desc;

--5. ¿Qué día se inscribieron la mayor cantidad de personas y cuántas personas se inscribieron en ese día?
select cantidad as cantidad_inscritos, fecha, fuente from INSCRITOS where cantidad in (select max(cantidad) from inscritos); -- cantidad total

-- cantidad inscrito por fuente y dia de inscripcion
select cantidad as cantidad_inscritos, fecha, fuente from INSCRITOS where cantidad in (select max(cantidad) from INSCRITOS group by fuente);

